# -*- coding: utf-8 -*-
"""Exp4_SimpleRegress_DWM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_ivtfsJsE6RyFoHOJ2ToeC5xqSHHGUb5

**SIMPLE LINEAR REGRESSION**
"""

from google.colab import files
uploaded = files.upload()
import numpy as np
import pandas as pd

df = pd.read_csv('Salary_Data_2_variables.csv')

df.duplicated().sum()
df.isnull().sum()

df.head(10)

x = df.drop(['Salary'],axis=1).values
y = df['Salary'].values

x_mean = x.mean()
x_mean
y_mean = y.mean()
y_mean

df['x-x^2'] = (df['YearsExperience'] - x_mean )*(df['YearsExperience'] - x_mean )

x_var = df['x-x^2'].sum()/len(df['x-x^2'])

df['x-x_mean'] = df['YearsExperience'] - x_mean
df['y-y_mean'] = df['Salary'] - y_mean

df['(x-x_mean)*(y-y_mean)'] = df['x-x_mean']*df['y-y_mean']

co_var_x_y = (df['(x-x_mean)*(y-y_mean)'].sum()) / (len(df['(x-x_mean)*(y-y_mean)']) - 1)

co_var_x_y

B1 = co_var_x_y / x_var

B0 = y_mean - ( B1*x_mean)

def predict_target_value(x, b0, b1):
    """
    Calculating the target (y) value using the input x and the coefficients b0, b1
    :param x:
    :param b0:
    :param b1:
    :return:
    """
    return b0 + b1 * x

ans = predict_target_value(12.5 , B0 ,B1)
print(ans)

"""Verification Using the SKLEARN"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split( x, y, test_size=0.33, random_state=69)

from sklearn import linear_model
reg = linear_model.LinearRegression()
reg.fit(x_train,y_train)

ans = int(reg.predict([[12.5]]))
print("Answer through the sklearn "+ str(ans))

"""**MULTIPLE LINEAR REGRESSION**"""

from google.colab import files
uploaded = files.upload()
import numpy as np
import pandas as pd

df = pd.read_csv('Housing_Data_3_variables.csv')

df.head()

y = df['house_price'].values
x = df.drop(['house_price'],axis=1).values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split( x, y, test_size=0.33, random_state=69)

from sklearn import linear_model
reg = linear_model.LinearRegression()
reg.fit(x_train,y_train)

x_test



y_pred = int(reg.predict([[3500,3]]))
print("The Price of given house: " + str(y_pred) + " Rs")

y_pred